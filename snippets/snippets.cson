'.source.karel':
  'assignment':
    'prefix': 'variable = value'
    'body': '${1:variable} = ${2:value}'
  'array declaration':
    'prefix': 'ARRAY[count] OF datatype'
    'body': 'ARRAY[${1:count}] OF ${2:datatype};'
  'select construct':
    'prefix': 'SELECT (variable) OF'
    'body': """
      SELECT (${1:variable}) OF
      \tCASE (${2:condition}):
      \t\t${3:consequence}
      ENDSELECT
    """
  'case construct':
    'prefix': 'CASE (condition): consequence'
    'body': """
      CASE (${1:condition}):
      \t${2:consequence}
    """
  'const':
    'prefix': 'CONST constants'
    'body': """
      CONST
      \t${1:constant} : ${2:type}
    """
  'for to array':
    'prefix': 'FOR i = Low(array-name) TO High(array-name)'
    'body': """
      FOR ${1:i} = Low(${2:array-name}) TO High(${2:array-name}) DO
      \t$3
      ENDFOR
      $4
    """
  'for downto array':
    'prefix': 'FOR i = High(array-name) DOWNTO Low(array-name)'
    'body': """
      FOR ${1:i} = High(${2:array-name}) DOWNTO Low(${2:array-name}) DO
      \t$3
      ENDFOR
      $4
    """
  'routine with parameters and return value':
    'prefix': 'ROUTINE RoutineName(parameter: parameterType): returnType'
    'body': """
      ROUTINE ${1:RoutineName}(${2:parameter}: ${3:parameterType}): ${4:returnType}
      VAR
      \t${5:variables}
      BEGIN
      \t${6:code}
      \tRETURN (${7:result})
      END ${1:RoutineName}
      $8
    """
  'routine declaration with return value':
    'prefix': 'ROUTINE RoutineName: returnType'
    'body': """
      ROUTINE ${1:RoutineName}: ${2:returnType}
      VAR
      \t${5:variables}
      BEGIN
      \t${6:code}
      \tRETURN (${7:result})
      END ${1:RoutineName}
      $8
    """
  'routine declaration with parameters':
    'prefix': 'ROUTINE RoutineName(parameter: parameterType)'
    'body': """
      ROUTINE ${1:RoutineName}(${2:parameter}: ${3:parameterType})
      VAR
      \t${5:variables}
      BEGIN
      \t${6:code}
      END ${1:RoutineName}
      $7
    """
  'routine declaration bare':
    'prefix': 'ROUTINE RoutineName'
    'body': """
      ROUTINE ${1:RoutineName}
      VAR
      \t${2:variables}
      BEGIN
      \t${3:code}
      END ${1:RoutineName}
      $4
    """
  'if':
    'prefix': 'IF condition THEN code ENDIF'
    'body': """
      IF ${1:condition} THEN
      \t${2:code}
      ENDIF
      $4
    """
  'if else':
    'prefix': 'IF condition THEN code ELSE code ENDIF'
    'body': """
      IF ${1:condition} THEN
      \t${2:code}
      ELSE
      \t${3:code}
      ENDIF
      $4
    """
  'else':
    'prefix': 'ELSE code ENDIF'
    'body': """
      ELSE
      \t${1:code}
    """
  'program':
    'prefix': 'PROGRAM program-name VAR variables BEGIN main-code END'
    'body': """
      PROGRAM ${1:program-name}

      VAR
      \t${2:variables}
      BEGIN
      \t${3:main-code}
      END ${1:program-name}
    """
  'uses':
    'prefix': 'USES unit-names'
    'body': """
      USES
      \t${1:unit-names}
    """
  'var':
    'prefix': 'VAR variable: datatype'
    'body': """
      VAR
      \t${1:variable}: ${2:datatype}$3
    """
  'variable declaration':
    'prefix': 'variable : datatype'
    'body': '${1:variable} : ${2:datatype}'
  'while-do':
    'prefix': 'WHILE condition DO code ENDWHILE'
    'body': """
      WHILE ${1:condition} DO
      \t${2:code}
      ENDWHILE
    """
  'move to':
    'prefix': 'MOVE TO position'
    'body': """
      MOVE TO ${1:position}
      $3
    """
  'move with settings':
    'prefix': 'WITH settings MOVE TO position'
    'body': """
      WITH ${1:settings} MOVE TO ${2:position}
      $3
    """
  'move to until':
    'prefix': 'MOVE TO position, UNTIL condition THEN code ENDMOVE'
    'body': """
      MOVE TO ${1:position},
      \tUNTIL ${2:condition} THEN
      \t\t${3:code}
      ENDMOVE
      $3
    """


  'true':
    'prefix': 'TRUE'
    'body': 'TRUE'
  'false':
    'prefix': 'FALSE'
    'body': 'FALSE'



  'datatype vector':
    'prefix': 'VECTOR'
    'body': 'VECTOR'
  'datatype xyzwpr':
    'prefix': 'XYZWPR'
    'body': 'XYZWPR'
  'datatype xyzwprex':
    'prefix': 'XYZWPREX'
    'body': 'XYZWPREX'
  'datatype jointpos':
    'prefix': 'JOINTPOS'
    'body': 'JOINTPOS'
  'datatype jointpos1':
    'prefix': 'JOINTPOS1'
    'body': 'JOINTPOS1'
  'datatype jointpos2':
    'prefix': 'JOINTPOS2'
    'body': 'JOINTPOS2'
  'datatype jointpos3':
    'prefix': 'JOINTPOS3'
    'body': 'JOINTPOS3'
  'datatype jointpos4':
    'prefix': 'JOINTPOS4'
    'body': 'JOINTPOS4'
  'datatype jointpos5':
    'prefix': 'JOINTPOS5'
    'body': 'JOINTPOS5'
  'datatype jointpos6':
    'prefix': 'JOINTPOS6'
    'body': 'JOINTPOS6'
  'datatype position':
    'prefix': 'POSITION'
    'body': 'POSITION'
  'datatype config':
    'prefix': 'CONFIG'
    'body': 'CONFIG'
  'datatype integer':
    'prefix': 'INTEGER'
    'body': 'INTEGER'
  'datatype string':
    'prefix': 'STRING'
    'body': 'STRING'
  'datatype real':
    'prefix': 'REAL'
    'body': 'REAL'
  'datatype boolean':
    'prefix': 'BOOLEAN'
    'body': 'BOOLEAN'
